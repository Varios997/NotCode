<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
image_index=0;
std_image_speed = 0.15;
direction = 5;
walk_speed = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input and Handeling

image_speed = std_image_speed;

//trata do movimento/sprite/direção do player(com WASD e SETAS)
// o simbolo &amp;&amp;(shift + 6) indica: se condiçaoA .E. condiçaoB forem verdadeiras faz ...
//o simbolo ||(shift + \(á esquerda do 1)) indica: se condicaoA .OU. condicaoB faz...
//uma condicao pode ser composta por mais condicoes: condicaoA = check_up e(&amp;&amp;) check_right, como se vê abaixo

if ((keyboard_check(vk_up) &amp;&amp; keyboard_check(vk_right)) || (keyboard_check(ord("W")) &amp;&amp; keyboard_check(ord("D"))))
{x+=walk_speed/2; y-=walk_speed/2; sprite_index = spr_player_up_right; direction = 1;}

else if ((keyboard_check(vk_up) &amp;&amp; keyboard_check(vk_left)) || (keyboard_check(ord("W")) &amp;&amp; keyboard_check(ord("A"))))
{x-=walk_speed*2/3; y-=walk_speed*2/3; sprite_index = spr_player_up_left; direction = 7}

else if ((keyboard_check(vk_down) &amp;&amp; keyboard_check(vk_right)) || (keyboard_check(ord("S")) &amp;&amp; keyboard_check(ord("D"))))
{x+=walk_speed*2/3; y+=walk_speed*2/3; sprite_index = spr_player_down_right; direction = 3}

else if ((keyboard_check(vk_down) &amp;&amp; keyboard_check(vk_left)) || (keyboard_check(ord("S")) &amp;&amp; keyboard_check(ord("A"))))
{x-=walk_speed*2/3; y+=walk_speed*2/3; sprite_index = spr_player_down_left; direction = 5}

else if (keyboard_check(vk_up) || keyboard_check(ord("W")))
{x+=0; y-=walk_speed; sprite_index = spr_player_up; direction = 0}

else if (keyboard_check(vk_left) || keyboard_check(ord("A")))
{x-=walk_speed; y-=0; sprite_index = spr_player_left; direction = 6}

else if (keyboard_check(vk_down) || keyboard_check(ord("S")))
{x+=0; y+=walk_speed; sprite_index = spr_player_down; direction = 4}

else if (keyboard_check(vk_right) || keyboard_check(ord("D")))
{x+=walk_speed; y-=0; sprite_index = spr_player_right; direction = 2}
//dispara
if keyboard_check_pressed(vk_space)
{instance_create(x,y,obj_bullet);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
